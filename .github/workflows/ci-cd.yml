name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Installe le minimum vital mÃªme si pas de requirements.txt
      - name: Install deps (best effort)
        run: |
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install "pandas>=1.5" "pyarrow>=11" "evidently>=0.7.14" black flake8

      - name: Lint (non bloquant)
        continue-on-error: true
        run: |
          black --check . || true
          flake8 || true

      - name: Smoke import
        run: |
          python - << 'PY'
          import importlib, sys
          for m in ["src.fraud"]:
              try:
                  importlib.import_module(m)
                  print("OK import", m)
              except Exception as e:
                  print("WARN import", m, "->", e, file=sys.stderr)
          PY

  
  docker:
    needs: [build-test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set lowercase owner
        run: echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # API image
      - name: Build & push API
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.api
          push: true
          provenance: false
          sbom: false
          tags: ghcr.io/${{ env.OWNER_LC }}/fraud-api:latest

      # UI image
      - name: Build & push UI
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.streamlit
          push: true
          provenance: false
          sbom: false
          tags: ghcr.io/${{ env.OWNER_LC }}/fraud-ui:latest
