name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Installe le minimum vital même si pas de requirements.txt
      - name: Install deps (best effort)
        run: |
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install "pandas>=1.5" "pyarrow>=11" "evidently>=0.7.14" black flake8

      - name: Lint (non bloquant)
        continue-on-error: true
        run: |
          black --check . || true
          flake8 || true

      - name: Smoke import
        run: |
          python - << 'PY'
          import importlib, sys
          for m in ["src.fraud", "src.monitoring"]:
              try:
                  importlib.import_module(m)
                  print("OK import", m)
              except Exception as e:
                  print("WARN import", m, "->", e, file=sys.stderr)
          PY

  drift-check:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Evidently stack
        run: |
          pip install --upgrade pip
          pip install "pandas>=1.5" "pyarrow>=11"
          pip install "pydantic<2" "evidently==0.4.12"



      # Génère 2 petits jeux synthétiques + rapport Evidently (0.7.14: Report + metrics.DataDrift)
      - name: Run drift report (synthetic)
        run: |
          python - << 'PY'
          import numpy as np, pandas as pd
          from pathlib import Path
          from evidently.report import Report
          from evidently.metrics import DataDriftPreset

          rng = np.random.default_rng(42)
          n = 5000
          ref = pd.DataFrame({
              "amount": rng.normal(100, 20, n),
              "balance_delta": rng.normal(0, 50, n),
              "step": rng.integers(0, 24*7, n),
          })
          cur = pd.DataFrame({
              "amount": rng.normal(110, 30, n),
              "balance_delta": rng.normal(5, 70, n),
              "step": rng.integers(0, 24*7, n),
          })

          report = Report(metrics=[DataDriftPreset()])
          report.run(reference_data=ref, current_data=cur)
          Path("reports").mkdir(parents=True, exist_ok=True)
          report.save_html("reports/drift_ci.html")
          print("OK -> reports/drift_ci.html")
          PY



      - name: Upload drift report artifact
        uses: actions/upload-artifact@v4
        with:
          name: drift-report
          path: reports/drift_ci.html

  docker:
    needs: [build-test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set lowercase owner
        run: echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # API image
      - name: Build & push API
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.api
          push: true
          provenance: false
          sbom: false
          tags: ghcr.io/${{ env.OWNER_LC }}/fraud-api:latest

      # UI image
      - name: Build & push UI
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.streamlit
          push: true
          provenance: false
          sbom: false
          tags: ghcr.io/${{ env.OWNER_LC }}/fraud-ui:latest
